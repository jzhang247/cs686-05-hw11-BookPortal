name: AWS-EC2 Instance CD

on:
  workflow_run:
    workflows: ["Node.js CI"]
    types: [completed]
    
jobs:
  on-success:

    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Send SSM Command
        id: ssm
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --targets "Key=InstanceIds,Values=${{ secrets.AWS_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "docker-compose.yml deploy" \
            --parameters 'commands=[
              "cd /home/ubuntu/book-portal",
              "sudo docker compose stop",
              "sudo docker compose rm -f",
              "sudo docker compose pull",
              "sudo docker compose up -d",
              "sudo docker image prune -af"
            ]' \
            --query "Command.CommandId" \
            --output text)

          echo "SSM Command ID: $COMMAND_ID"

          # Wait for command to finish
          STATUS="InProgress"
          while [ "$STATUS" == "InProgress" ] || [ "$STATUS" == "Pending" ]; do
            sleep 5
            STATUS=$(aws ssm list-command-invocations \
              --command-id $COMMAND_ID \
              --details \
              --query "CommandInvocations[0].Status" \
              --output text)
            echo "Current status: $STATUS"
          done

          # Show output
          aws ssm list-command-invocations \
            --command-id $COMMAND_ID \
            --details \
            --query "CommandInvocations[0].CommandPlugins[0].Output" \
            --output text
